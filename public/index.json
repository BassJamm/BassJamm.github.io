[{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"DeployEveryOnePrint"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7 ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"},{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"DeployEveryOnePrint"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7 Email Authentication using OAuth ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.emailarchitect.net/eaoauth/kb/azure_application_pop_imap_grant.aspx\"\u003eEmail Authentication using OAuth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"},{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"DeployEveryOnePrint"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7 Email Authentication using OAuth ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.emailarchitect.net/eaoauth/kb/azure_application_pop_imap_grant.aspx\"\u003eEmail Authentication using OAuth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"},{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"DeployEveryOnePrint"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7. Email Authentication using OAuth. ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.emailarchitect.net/eaoauth/kb/azure_application_pop_imap_grant.aspx\"\u003eEmail Authentication using OAuth\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"},{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"DeployEveryOnePrint"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7. Email Authentication using OAuth. ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.emailarchitect.net/eaoauth/kb/azure_application_pop_imap_grant.aspx\"\u003eEmail Authentication using OAuth\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"},{"content":"The below summarises the steps to setup emailing via an account using SMTP with Exchange Online.\nI didn\u0026rsquo;t come up with this information, you can find all of it detailed at this reference link\nComponents Enterprise App - Which will provide the OAuth token. Email Account - Which will be sending the email. PowerShell Script - They way in which you can send the mail. I am specifically covering the 2nd option to use an Enterprise Application. To use OAUTH, the access token is required. There are two ways to retrieve the access token from Microsoft server:\nUser login the account by web browser, the application uses the returned authorization code to request the access token. This way requires user interactive attending, it is not suitable for server-side application.\nSetup the Enterprise Application Register the application in Azure Portal. Note the client id and tenant id. Assign API permission to the application. Click Add Permissions. Select APIs in my organization uses -\u0026gt; Office 365 Exchange Online -\u0026gt; Application Permission. Find the relevant permissions of the following, POP.AccessAsApp permission, IMAP.AccessAsApp permission, SMTP.AccessAsApp permission. Grant Admin consent for the Organisation. Create a client secret or Certificate. Register SMTP/POP/IMAP service principals in Exchange This will be given permissions to send on behalf of the account you want to use.\nFind your APPLICATION_ID and OBJECT_ID. Open Exchange Online PowerShell to run the cmdlet. Connect-ExchangeOnline, this will launch a browser. Create your new service principal, New-ServicePrincipal -AppId \u0026quot;yourappID\u0026quot; -ServiceId \u0026quot;serviceprincialId\u0026quot; Query it and check it is there, Get-ServicePrincipal. Add the specific mailboxes in the tenant that will be allowed to be access by your application. User is the serviceId. Add-MailboxPermission -Identity \u0026quot;grant-test@domain.com\u0026quot; -User \u0026quot;serviceprincialId\u0026quot; -AccessRights FullAccess. Enable SMTP Auth per Account Microsoft Document Link for where the commands below have come from\n1 2 # Add one of the following to the end of this command, \u0026lt;$true | $false | $null\u0026gt; Set-CASMailbox -Identity \u0026lt;MailboxId\u0026gt; -SmtpClientAuthenticationDisabled \u0026lt;here\u0026gt; This example enables SMTP AUTH for mailbox sean@contoso.com.\n1 Set-CASMailbox -Identity sean@contoso.com -SmtpClientAuthenticationDisabled $false This example disables SMTP AUTH for mailbox chris@contoso.com.\n1 Set-CASMailbox -Identity chris@contoso.com -SmtpClientAuthenticationDisabled $true Reporting SMTP Auth Status 1 2 3 4 5 6 7 8 9 # Gather all mailboxes where SMTP AUTH is disabled # ? = Where-Object Get-CASMailbox -ResultSize unlimited | ? {$_.SmtpClientAuthenticationDisabled -eq $true} # Gather all mailboxes where SMTP AUTH is enabled Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $false) # Gather all mailboxes where the setting is controlled by org settings Get-CASMailbox -ResultSize unlimited | ? ($_.SmtpClientAuthenticationDisabled -eq $null) Script to test this out In-progress\n","permalink":"http://localhost:1313/posts/january2025/oauthwithexchonline/","summary":"Sending email via Exchange Online using OAuth","title":"Sending email with SMTP via Exchange Online using OAuth"},{"content":"Azure Network Security Groups (NSGs) are essential tools for managing and securing network traffic in Azure. Acting as virtual firewalls, NSGs allow you to define rules that control inbound and outbound traffic to resources. They are commonly used to protect virtual machines, enforce network segmentation, and ensure secure access within virtual networks.\nMost of the information below has been taken from Microsoft articles. I won\u0026rsquo;t pretend I came up with all this, just condensed it a bit.\nRules and Priorities Service Tags Learn more about Virtual Network Service Tags | Microsoft Docs\nService tags simplify network security by grouping IP address prefixes for specific Azure services. These tags are managed and automatically updated by Microsoft, eliminating the need for frequent manual updates when service addresses change.\nFor example, using a service tag like Storage in your network security rules ensures you allow all necessary traffic for Azure Storage without tracking individual IP addresses. This approach reduces complexity and keeps your configurations up-to-date effortlessly.\nRule Priority Rules in Azure Network Security Groups (NSGs) are assigned a priority value between 100 and 4096. Lower numbers indicate higher priority, meaning rules with lower numbers are processed first.\nOnce traffic matches a rule, further processing stops. This means any rules with lower priority (higher numbers) that overlap with higher-priority rules will not be processed. Plan accordingly.\nSome Rule Suggestions Check out the list of suggested rules I have put together, they may not be good for all situations but, give an idea of where to start.\nLink to the Github Gist\nThis would not embed properly in the website, I assume because it is a markdown file.\nFlow Logs NSG flow logs is a feature of Azure Network Watcher that allows you to log information about IP traffic flowing through a network security group (NSG). Flow data is sent to Azure Storage from where you can access it and export it to any visualization tool.\nFlow logs for network security groups | Microsoft doc link\nCommon use cases All of the below information has been ripped out of a Microsoft doc, not my original material.\nNetwork monitoring Identify unknown or undesired traffic. Monitor traffic levels and bandwidth consumption. Filter flow logs by IP and port to understand application behavior. Export flow logs to analytics and visualization tools of your choice to set up monitoring dashboards. Usage monitoring and optimization Identify top talkers in your network. Combine with GeoIP data to identify cross-region traffic. Understand traffic growth for capacity forecasting. Use data to remove overly restrictive traffic rules. Compliance Use flow data to verify network isolation and compliance with enterprise access rules. Network forensics and security analysis Analyze network flows from compromised IPs and network interfaces. Export flow logs to any SIEM or IDS tool of your choice. Reading the flow log Logs are in JSON format and will be outputting in the json file format. The information that is interesting is in the flowtuples section of the json file. Example flow log entry 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 { \u0026#34;records\u0026#34;: [ { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:00:35.3899262Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110402,94.102.49.190,10.5.16.4,28746,443,U,I,D,B,,,,\u0026#34;, \u0026#34;1542110424,176.119.4.10,10.5.16.4,56509,59336,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110432,167.99.86.8,10.5.16.4,48495,8088,T,I,D,B,,,,\u0026#34; ] } ] }, { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_AllowInternetOutBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110377,10.5.16.4,13.67.143.118,59831,443,T,O,A,B,,,,\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.117,59932,443,T,O,A,E,1,66,1,66\u0026#34;, \u0026#34;1542110379,10.5.16.4,13.67.143.115,44931,443,T,O,A,C,30,16978,24,14008\u0026#34;, \u0026#34;1542110406,10.5.16.4,40.71.12.225,59929,443,T,O,A,E,15,8489,12,7054\u0026#34; ] } ] } ] } }, { \u0026#34;time\u0026#34;: \u0026#34;2018-11-13T12:01:35.3918317Z\u0026#34;, \u0026#34;systemId\u0026#34;: \u0026#34;a0fca5ce-022c-47b1-9735-89943b42f2fa\u0026#34;, \u0026#34;category\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvent\u0026#34;, \u0026#34;resourceId\u0026#34;: \u0026#34;/SUBSCRIPTIONS/00000000-0000-0000-0000-000000000000/RESOURCEGROUPS/FABRIKAMRG/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/FABRIAKMVM1-NSG\u0026#34;, \u0026#34;operationName\u0026#34;: \u0026#34;NetworkSecurityGroupFlowEvents\u0026#34;, \u0026#34;properties\u0026#34;: { \u0026#34;Version\u0026#34;: 2, \u0026#34;flows\u0026#34;: [ { \u0026#34;rule\u0026#34;: \u0026#34;DefaultRule_DenyAllInBound\u0026#34;, \u0026#34;flows\u0026#34;: [ { \u0026#34;mac\u0026#34;: \u0026#34;000D3AF87856\u0026#34;, \u0026#34;flowTuples\u0026#34;: [ \u0026#34;1542110437,125.64.94.197,10.5.16.4,59752,18264,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110475,80.211.72.221,10.5.16.4,37433,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110487,46.101.199.124,10.5.16.4,60577,8088,T,I,D,B,,,,\u0026#34;, \u0026#34;1542110490,176.119.4.30,10.5.16.4,57067,52801,T,I,D,B,,,,\u0026#34; ] } ] } ] } } Flow Tuples flowTuples: String that contains multiple properties for the flow tuple in a comma-separated format\nExample entry: 1493695838,185.170.185.105,10.2.0.4,35370,23,T,I,A,C,1021,588096,8005,4610880\nScript to read the logs via PowerShell Dump the below into a file as a script (.ps1) filetype.\nTo use the script below, navigate to the location of the file, and use the NsgFlowLogFileName switch to select the JSON file. Then run the command .\\Parse-NSG-FlowLog_json.ps1 -NsgFlowLogFileName .\\PT1H.json | ft -AutoSize\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/january2025/nsgassistance/","summary":"Helpful information about Network Security Groups and rule suggestions","title":"Network Security Group (NSG) Assistance"},{"content":"Local Folder Structure\nI would suggest setting up the following folder struture on your local machine first.\nCreate C:\\Software\\Intune-Apps\\EveryOnePrint. Inside EveryOnePrint, place your exe and install script. Create an output folder here like so, C:\\Software\\Intune-Apps\\Output Find your exe file, it should come from your supplier (there\u0026rsquo;s no EveryOne Print website so far as I could fine.) Create a new script, name it Install-EveryOnePrint.ps1. Place the script below in your new script file. Change the syntax with your company information. Package the exe and the script into an IntuneWin File using the Microsoft Win32 Content Prep Tool; command refernce below.\nOpen PowerShell as an Admin. Navigate to the location of the Win32 Content Prep Tool. Run this command, Content-prep-tool-name -c C:\\Software\\Intune-Apps\\EveryOnePrint -s C:\\Software\\Intune-Apps\\EveryOnePrint\\Install-EveryOnePrint.ps1 -o C:\\Software\\Intune-Apps\\Output Deployment Script 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 \u0026lt;# Install PC Client Available command parameters: /S – Run the installer in unattended mode /GATEWAYADDRESS=xxx – chooses HCP gateway address /ACCOUNTDOMAIN=yyy – chooses account domain name /SYNCPERIOD=nn – automatic synchronization period, in minutes. The default period is 60 minutes /IGNORESSLERRORS=true|false – option indicating whether to ignore any errors related to SSL handshake (for example wrong certificate or host name). The default value is false /SYNCDRIVER=true|false – enable or disable automatic driver installation. Disabling assumes the user is responsible for the driver install. The default value is true /IPPOVERSSL=true|false – enable or disable printing over secure SSL connection. The default value is false /AUTHTYPE=0|1|2 – User authentication type: 0=username from session (default), 1=user name from session + domain name, 2=manual login, 3=UserPrincipalName /ALLOWCONFIGURATION=true|false – enable or disable the ability for the end-user to configure the PC client after installation. The default value is true #\u0026gt; \u0026lt;# 2) Amend below command with values and parameters for your installation: GATEWAYADDRESS= /ACCOUNTDOMAIN= /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false #\u0026gt; Start-Process .\\hcpclient-3.26.0-release-setup.exe -ArgumentList \u0026#34;/S /GATEWAYADDRESS=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /ACCOUNTDOMAIN=\u0026#34;\u0026lt;# Look in notes above#\u0026gt;\u0026#34; /AUTHTYPE=0 /SYNCDRIVER=true /IPPOVERSSL=true /ALLOWCONFIGURATION=false\u0026#34; -Verb RunAs ","permalink":"http://localhost:1313/posts/december2024/deployeveryoneprint/","summary":"Deploy EveryOne Print from Intune","title":"Deploy EveryOne Print"},{"content":"Intune Autopilot is a powerful tool for building and deploying Windows 11 devices, letting you deploying configurations and settings whilst the machine is building and on-boarded to EntraID and Intune.\nBelow are some quick suggestions and notes from what I have learned about setting it up and managing it.\nQuick Fire Bullet Points Get your OEM to import devices for you! Don\u0026rsquo;t forget about setting a BIOS password, it is easy to forget this step until it is to late in the process. Include SSPR in the remit of your Intune project, it saves so much time. Don\u0026rsquo;t forget LAPS. Setup 3 dynamic groups in Entra ID to do the following. 1st on to capture all Intune Devices. 2nd one to capture all Intune Users. 3rd one to capture all Autopilot Devices. Create a dynamic group to capture all devices by targetting a device category, this is useful to have config and apps apply after Autopilot. Create a Conditional Access policy, that will only allow access if the deivces is policy compliant, make sure this is applied to the all intune users dynamic group. Extend the compliancy to longer than in production to aid in testing and longer deployment times. Check your Configuration Profile settings do not conflict with the Security Baseline policies. I have expanded on some below.\nDynamic Groups I have suggestd 4 groups in the above list, below are the reasons for them and the dynamic query suggestions.\nConfiguring groups as Dynamic Device groups automates the process of adding devices to the appropriate group, reducing administrative overhead. Check out this Microsoft documentation for reference.\nTo create a group that includes all of your Autopilot devices, enter: (device.devicePhysicalIDs -any (_ -contains \u0026quot;[ZTDID]\u0026quot;)), the [ZTDID] field identifies Zero-Touch Deployment IDs for your devices. To create a group that includes all Autopilot devices with a specific group tag (the Azure AD device OrderID), enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[OrderID]:179887111881\u0026quot;)), the OrderID refers to the Azure AD device\u0026rsquo;s Order ID. To create a group that includes all your Autopilot devices with a specific Purchase Order ID, enter: (device.devicePhysicalIds -any (_ -eq \u0026quot;[PurchaseOrderId]:76222342342\u0026quot;)). To create a group that collects devices based on their category, try, (device.deviceCategory -eq \u0026quot;IT\u0026quot;). This group will only find devices after the user selects the category in the Company Portal or an Admin assigns the machine on from Intune. Apply patching, Apps or config you want to apply after Autopilot has done it\u0026rsquo;s bit. BIOS Password Painfully, this often has to be done manually by someone who is provisioning the machine however, some brands do offer command line tools to do this. Lenovo is one example of this and Dell also offer this via their Dell Software.\nI\u0026rsquo;ll update this same post as I find more time to expand on the bullet points, hope it helps someone!\n","permalink":"http://localhost:1313/posts/december2024/autopilotsetupsuggestions/","summary":"Some quick fire suggestions for setting up Autopilot","title":"AutoPilot Setup Suggestions"},{"content":"Creating the Uninstall package Note that the download link to the McAfee Consumer Product Removal Tool will download the latest version. I had to download an older version I found from a reddit post for this to work; using the latest one is a bit hit and miss.\nDownload McAfee Consumer Product Removal Tool. Start the downloaded MCPR.exe and then Hold it open by not pressing next or close. While this dialog is open, navigate to the unpacked source files in, %localappdata%\\temp. Copy the folder MCPR to a suitable place for packageing, for example c:\\temp\\McAfeeRemover. Close the still open McAfee Software Removal tool by clicking cancel. Create a Powershell script in the folder above, for example C:\\temp\\McAfeeRemover\\McAfeeRemover.ps1. Create an IntuneWin package with the Microsoft Win32 Content Prep Tool Catalog files are used to enable Win32 apps in Windows 10 S mode, they are specific to Application Control which is the mechanism that S Mode uses to enforce and control applications.\nLots of details on this at https://docs.microsoft.com/en-us/mem/intune/apps/apps-win32-s-mode.\n","permalink":"http://localhost:1313/posts/december2024/uninstallmcafee/","summary":"Uninstall McAfee during Autopilot","title":"Uninstall McAfee"},{"content":"Intro Veeam Backup for Microsoft 365 is a reliable solution, but after years of use, I’ve identified areas for improvement. Key challenges include:\nBuilt-in Reporting Limited features often fall short of customer needs, requiring custom PowerShell scripts. Retention Periods: Difficult to audit, making it hard to track data outside of the backup retention window. SharePoint Script Issues: Pre-version 8, Microsoft\u0026rsquo;s security settings frequently disabled script execution. Group Ownership Gaps: Groups without owners aren\u0026rsquo;t backed up unless manually addressed. Backup Speed: Microsoft throttling significantly slows job completion times. Easy to lose control: We had various people\\teams look after this product, configuration drift has really left it in a mess in places. Below, I\u0026rsquo;m sharing what I have found, used and troubleshooted.\nTroubleshooting Scripts Checking the Last Backed up Time for an Object The notes below are for Item-Level Backups, which is based on the last modified date of the items within the backups (Emails, Files, Groups etc). Snapshot level backup retention works the same way accept you lose the whole snapshot not just the items.\nAn object is any one of the following item, User, Group, Site, Team, Organization, OneDrive, Mailbox. The script below helps identify when the object was last successfully backed up. Unfortunately, it does not identify which item in the backup is falling out of scope of the retention but, does give an idea of when items will start being removed from the backup job.\nFor example, in a SharePoint site, the file \u0026ldquo;Don\u0026rsquo;t Delete Me\u0026rdquo;, was last modified on the 1st of September 2021. If the retention is 3 years, the document would have been removed from the backups 4 months ago, but, other data in that site may have been edited in 2024 and so is still in scope of the retention.\nI went a bit mad on the Write-Host commands in this script but, the staff who\u0026rsquo;d be running this are not all savvy with Powershell so thought more information was better.\nReviewing the VBO Logs You can download the logs using the Veeam Console.\nOpen the Console. Click the Hamburger Menu in the top left. Select Help and Support. Select Support Information. With Collect Logs selected, Click next. Select the proxy server your job is running via. Save the logs to a good location and extract them. The script below doesn\u0026rsquo;t perform many complex actions; it simply removes some square brackets and creates separate date and time variables in their own columns. However, it simplifies the process, making it easier to continue searching, formatting, and exporting the logs from PowerShell.\nSome of the logs can be over 100,000 lines so there is a progress bar written into the foreach loop for some visual feedback.\nParsing Job Warnings and Errors It\u0026rsquo;s quite useful to be able to pull out any warnings or errors from the previous jobs. Below is a script that can help do that.\nThe starttime is optional, if you do not provide it, it will provide the most recent job matching the name you provide. Make sure to enter the starttime as a string like the example shows.\nRemoving a User\u0026rsquo;s License This process can be a bit of a pig, there is a Veeam Blog or KB post here.\nBest Practices Guide If you are looking for what Veeam suggest about how to setup and use this solution, there\u0026rsquo;s a guide here for version 7.\nJET Database Errors This will not be an issue once upgraded to version 8 as they have swapped over to Postgresql instead of JET.\nError Example Example error, 21/03/2024 20:28:39 :: Failed to process site: https://domain.sharepoint.com/sites/sitename. Unable to access repository (E:\\*VBOCacheName*\\PersistentCache\\repository.adb) JetError -1504, JET_errNullInvalid, Null not valid :: 0:03:27.\nSolution Raise a ticket with Veeam first—they’ll guide you in using eseutil.exe (a Microsoft tool for troubleshooting Exchange databases) to check database integrity.\nSteps we followed:\nRan an integrity check and repair. Deleted all cache files except the database, allowing Veeam to recreate them. Attempted another repair. Finally, we deleted the cache database and performed a re-sync. Since our database was only 80GB, this was completed within hours. They did warn me that this proess could take days if the .adb file is larger.\nI quote Veeam here, JET errors are notoriously hard to fix without a cache re-sync. They’re typically caused by a forcefully terminated open thread to the database, such as a server reboot.\nWarning: Possible team chat sync problem was detected An odd issue quickly fixed by Veeam Support: a mailbox tied to a Microsoft 365 group refused to back up, running for days without completing.\nVeeam advised against terminating jobs that are running outside the job Window and to allow atleast 2 retries for a job to minimise issues with throttling and JET based errors, see here for JET Errors.\nLog File snippet you should find 1 2 3 4 5 6 7 [05.08.2024 05:24:55.909] 68 (8380) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:55.909] 68 (8380) Warning: Possible team chat sync problem was detected [05.08.2024 05:24:55.914] 47 (5180) Processing mailbox: groupmailboxup@groups.domain.com... [05.08.2024 05:24:55.924] 47 (5180) Syncing folder items: Inbox... [05.08.2024 05:24:56.004] 47 (5180) Sync time: 0.0813057 [05.08.2024 05:24:56.004] 47 (5180) Changed items: 0, deleted items: 0, read state changes: 100 [05.08.2024 05:24:56.004] 47 (5180) Warning: Possible team chat sync problem was detected Fix Raise a ticket with Veeam first before going and doing anything yourself unless you are happy doing so.\nMake sure no jobs or restore sessions are running Stop the Veeam Backup for Microsoft 365 and Veeam Backup Proxy for Microsoft 365 services on the VBO 365 server and all backup proxies. Navigate to %ProgramData\\Veeam\\Backup365. Edit the proxy.xml file\u0026rsquo;s source line to include, FixTeamChatSync=\u0026quot;True\u0026quot;. 1 2 3 4 5 6 7 8 \u0026lt;Veeam\u0026gt; \u0026lt;Archiver\u0026gt; \u0026lt;Source FixTeamChatSync=\u0026#34;True\u0026#34; /\u0026gt; . . . \u0026lt;/Archiver\u0026gt; \u0026lt;/Veeam\u0026gt; Reporting As I mentioned to begin with, the reporting is one place that we have had to rely quite heavily on the Powershell commands for. Below are some examples.\nLicense Overview Report A simple set of commands that will give you the license overview report for all organisations in your VBO solution.\nHope this helps someone!\n","permalink":"http://localhost:1313/posts/december2024/veeambackupforms365/","summary":"Issues, Solutions, Notes and Reporting","title":"Veeam Backup For Microsoft 365"},{"content":" PaperMod Site. Call for Cloud Blog. Best Practice Guide for Veeam Backup for Microsoft 365 V7. Email Authentication using OAuth. ","permalink":"http://localhost:1313/external/","summary":"\u003cul\u003e\n\u003cli\u003e\u003ca href=\"https://adityatelange.github.io/hugo-PaperMod/\"\u003ePaperMod Site.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://call4cloud.nl/\"\u003eCall for Cloud Blog.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://bp.veeam.com/vb365/\"\u003eBest Practice Guide for Veeam Backup for Microsoft 365 V7\u003c/a\u003e.\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"https://www.emailarchitect.net/eaoauth/kb/azure_application_pop_imap_grant.aspx\"\u003eEmail Authentication using OAuth\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e","title":"External Links"},{"content":"Collecting Autopilot Diagnostic Logs How to collect diagnostic logs from a device that is building currently or has been built.\nPress Shift + F10 or Fn + Shift + F10, to open Command Prompt. Type \u0026ldquo;PowerShell\u0026rdquo;, to launch the PowerShell prompt. Type , New-Item -Path C:\\ -Name Temp -ItemType Directory to create the destination folder for the logs. Type,Set-ExecutionPolicy -ExecutionPolicy Unrestricted to allow the script install later. Make sure your location is, \u0026quot;C:\\Windows\\System32\u0026quot;, if not type sl C:\\Windows\\System32\\. Run, MdmDiagnosticsTool.exe -area Autopilot -zip C:\\Temp\\mdmDiag.zip. Run, Install-Script -Name Get-AutopilotDiagnostics -Scope CurrentUser. Run, Get-AutopilotDiagnostics.ps1 -zip C:\\Temp\\mdmdiag.zip. Autopilot Process stuck How to check should your Autopilot build be stuck for long periods of time.\nFirstly, check the Autopilot Diagnostic Logs first using this section. If that gives you an application Id I would suggest using the section below for how to link that Id with the application.\nFinding an Application via it\u0026rsquo;s Id You\u0026rsquo;ll need to grab the application ID using this section first, then substitute your app Id into the url below.\nInclude the *, where they are now.\nhttps://endpoint.microsoft.com/#blade/Microsoft_Intune_Apps/SettingsMenu/2/appId/**appid**\nWorth noting that this method is a bit hit and miss. The alternative is to connect via PowerShell to your tenant. and generate your own report to collect the application Ids.\nDevice is assigned to a user You\u0026rsquo;ll see this when you try to complete the user driven method when the username is pre-populated at the initial login prompt. During pre-provision, where it confirms the Autopilot profile, you\u0026rsquo;ll see the user\u0026rsquo;s email address underneath it.\nCheck out this Microsoft doc for more information. Below is the condensed version.\nSign into the Microsoft Intune admin center. Navigate to Windows | Windows enrollment screen, under Windows Autopilot, select Devices. In the Windows Autopilot devices screen, locate the device to assign a user to. Once the desired device is located, select the box to the left of the device, making sure that there\u0026rsquo;s check mark in the box, and then select Assign user in the toolbar at the top of page. Clear the user from here and click Save. Reboot the device (maybe once or twice) and the user should no longer appear. Hardware Error during Pre-Provision More errors will be added as and when I find them.\nAutopilot securing your hardware 0x800705b4 PowerShell script to troubleshoot TPM attestation issues\ntpmtool getdeviceinformation - Gets basic TPM information.\nConfirm Attestation Readiness Powershell Gallery Link\nRun Command Prompt as an admin. Run the commands below. 1 2 3 4 5 6 7 8 9 # Install the module Install-Module -Name Autopilottestattestation -force # Set the exetion policy set-executionpolicy unrestricted # Import the module import-module -Name Autopilottestattestation # Run the report # Say yes to checking for updates. test-autopilotattestation Continue on below if you find errors or if you find no errors.\nReset the Device to Factory Make sure to delete from MDM (not EntraID or Autopilot)\nReset the device from the error page from Pre-provisioning, let this complete.\nThere is a command for PowerShell for a Windows 11 device, systemreset --factoryreset\nTry Pre-Provision again.\nClear the TPM Chip There is always a small chance you could bork the machine doing this, don\u0026rsquo;t do it without considering this.\nOpen command prompt as an admin. Type, Clear-Tpm. Run the command, tpmtool getdeviceinformation command to ascertain TPM health, Tool information. Try the build again. Escalate to Microsoft You\u0026rsquo;ve tried everything so far to no end. Now to raise to Microsoft.\n","permalink":"http://localhost:1313/posts/december2024/diagnosing-autopilot-issues/","summary":"Diagnosing Autopilot Issues for Windows Devices","title":"Diagnosing Autopilot Issues for Windows Devices"}]